[{"path":"index.html","id":"time-varying-principal-component-regression","chapter":"Time-Varying Principal Component Regression","heading":"Time-Varying Principal Component Regression","text":"","code":""},{"path":"index.html","id":"forecasting-performances-on-fred-md","chapter":"Time-Varying Principal Component Regression","heading":"Forecasting Performances on FRED-MD","text":"book, report main steps forecast evaluation procedure. first chapter explains preprocessing pipeline apply data step forecast evaluation. second chapter reports forecast-evaluation procedure 10 policy-relevant variables FRED-MD using different predictive algorithms.","code":"\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(gridExtra)\nlibrary(kableExtra)"},{"path":"data-preparation.html","id":"data-preparation","chapter":"1 Data preparation","heading":"1 Data preparation","text":"notebook, prepare FRED-MD data analysis. follow McCracken Ng (2016) handling missing values outliers. also follow rules transforming series make stationary.Notice notebook shows whole procedure current vintage dataset illustrative purposes. steps preparing dataset collected function used actual real-time forecast evaluation using vintages FRED-MD.","code":"\n## Load code from script folders\npreprocessing_scripts_env <- new.env()    \nfile.sources = list.files(paste0(getwd(), c(\"/sourcecode/data_preprocessing/\")), \n                          pattern=\".R$\", full.names=TRUE, \n                          ignore.case=TRUE)\nsapply(file.sources, source, preprocessing_scripts_env)\nattach(preprocessing_scripts_env, name=\"sourced_scripts\")"},{"path":"data-preparation.html","id":"loading-the-data-and-first-inspection","chapter":"1 Data preparation","heading":"1.1 Loading the data and first inspection","text":"COMMENTS SERIES MISSING VALUES","code":"\nfredmd <- read.csv(\"data/current.csv\")\n\n## The first row contains the transformation codes\nd <- as_tibble(fredmd[-1,])\ntcodes <- unlist(fredmd[1,-1])\n## Codes for transformations in Mc Cracken and Ng 2015\nfredmd[1,][1:10]\n#>      sasdate RPI W875RX1 DPCERA3M086SBEA CMRMTSPLx RETAILx\n#> 1 Transform:   5       5               5         5       5\n#>   INDPRO IPFPNSS IPFINAL IPCONGD\n#> 1      5       5       5       5\n## Variables\nvar_names <- names(d)[-1]\nprint(length(var_names))\n#> [1] 127\nprint(var_names)\n#>   [1] \"RPI\"             \"W875RX1\"         \"DPCERA3M086SBEA\"\n#>   [4] \"CMRMTSPLx\"       \"RETAILx\"         \"INDPRO\"         \n#>   [7] \"IPFPNSS\"         \"IPFINAL\"         \"IPCONGD\"        \n#>  [10] \"IPDCONGD\"        \"IPNCONGD\"        \"IPBUSEQ\"        \n#>  [13] \"IPMAT\"           \"IPDMAT\"          \"IPNMAT\"         \n#>  [16] \"IPMANSICS\"       \"IPB51222S\"       \"IPFUELS\"        \n#>  [19] \"CUMFNS\"          \"HWI\"             \"HWIURATIO\"      \n#>  [22] \"CLF16OV\"         \"CE16OV\"          \"UNRATE\"         \n#>  [25] \"UEMPMEAN\"        \"UEMPLT5\"         \"UEMP5TO14\"      \n#>  [28] \"UEMP15OV\"        \"UEMP15T26\"       \"UEMP27OV\"       \n#>  [31] \"CLAIMSx\"         \"PAYEMS\"          \"USGOOD\"         \n#>  [34] \"CES1021000001\"   \"USCONS\"          \"MANEMP\"         \n#>  [37] \"DMANEMP\"         \"NDMANEMP\"        \"SRVPRD\"         \n#>  [40] \"USTPU\"           \"USWTRADE\"        \"USTRADE\"        \n#>  [43] \"USFIRE\"          \"USGOVT\"          \"CES0600000007\"  \n#>  [46] \"AWOTMAN\"         \"AWHMAN\"          \"HOUST\"          \n#>  [49] \"HOUSTNE\"         \"HOUSTMW\"         \"HOUSTS\"         \n#>  [52] \"HOUSTW\"          \"PERMIT\"          \"PERMITNE\"       \n#>  [55] \"PERMITMW\"        \"PERMITS\"         \"PERMITW\"        \n#>  [58] \"ACOGNO\"          \"AMDMNOx\"         \"ANDENOx\"        \n#>  [61] \"AMDMUOx\"         \"BUSINVx\"         \"ISRATIOx\"       \n#>  [64] \"M1SL\"            \"M2SL\"            \"M2REAL\"         \n#>  [67] \"BOGMBASE\"        \"TOTRESNS\"        \"NONBORRES\"      \n#>  [70] \"BUSLOANS\"        \"REALLN\"          \"NONREVSL\"       \n#>  [73] \"CONSPI\"          \"S.P.500\"         \"S.P..indust\"    \n#>  [76] \"S.P.div.yield\"   \"S.P.PE.ratio\"    \"FEDFUNDS\"       \n#>  [79] \"CP3Mx\"           \"TB3MS\"           \"TB6MS\"          \n#>  [82] \"GS1\"             \"GS5\"             \"GS10\"           \n#>  [85] \"AAA\"             \"BAA\"             \"COMPAPFFx\"      \n#>  [88] \"TB3SMFFM\"        \"TB6SMFFM\"        \"T1YFFM\"         \n#>  [91] \"T5YFFM\"          \"T10YFFM\"         \"AAAFFM\"         \n#>  [94] \"BAAFFM\"          \"TWEXAFEGSMTHx\"   \"EXSZUSx\"        \n#>  [97] \"EXJPUSx\"         \"EXUSUKx\"         \"EXCAUSx\"        \n#> [100] \"WPSFD49207\"      \"WPSFD49502\"      \"WPSID61\"        \n#> [103] \"WPSID62\"         \"OILPRICEx\"       \"PPICMM\"         \n#> [106] \"CPIAUCSL\"        \"CPIAPPSL\"        \"CPITRNSL\"       \n#> [109] \"CPIMEDSL\"        \"CUSR0000SAC\"     \"CUSR0000SAD\"    \n#> [112] \"CUSR0000SAS\"     \"CPIULFSL\"        \"CUSR0000SA0L2\"  \n#> [115] \"CUSR0000SA0L5\"   \"PCEPI\"           \"DDURRG3M086SBEA\"\n#> [118] \"DNDGRG3M086SBEA\" \"DSERRG3M086SBEA\" \"CES0600000008\"  \n#> [121] \"CES2000000008\"   \"CES3000000008\"   \"UMCSENTx\"       \n#> [124] \"DTCOLNVHFNM\"     \"DTCTHFNM\"        \"INVEST\"         \n#> [127] \"VIXCLSx\"\ncat(\"\\nThe last observation is missing for\", sum(is.na(d[nrow(d),])), \"variables\")\n#> \n#> The last observation is missing for 127 variables\ncount_missing(d[-nrow(d),])"},{"path":"data-preparation.html","id":"policy-relevant-variables","chapter":"1 Data preparation","heading":"1.1.1 Policy-relevant variables","text":"Following Kim Swanson (2010) consider 10 key variables reported table . table also reports 6 policy-relevant variables mentioned paper.Remark: series PPIFGS (Producer price index finished goods) discontinued 2016-03 vintage. new varaible PPI index finished goods WPSFD49207.","code":"\ntarget_variables <- c(\"UNRATE\", \"W875RX1\", \"GS10\", \n                      \"CPIAUCSL\", \"WPSFD49207\", \"PAYEMS\", \n                      \"HOUST\", \"INDPRO\", \"M2SL\", \"S.P.500\")\n\nextra_variables <- c(\"RETAILx\", \"ISRATIOx\", \"AMDMNOx\", \n                     \"AMDMUOx\", \"NAPMNOI\", \"NAPMII\")"},{"path":"data-preparation.html","id":"transformation","chapter":"1 Data preparation","heading":"1.2 Transformation","text":"column tcode denotes following data transformation series \\(x\\): (1) transformation; (2) \\(\\Delta x_t\\); (3) \\(\\Delta^2 x_T\\); (4) \\(\\log(x_t)\\); (5) \\(\\Delta\\log(x_t)\\); (6) \\(\\Delta^2\\log(x_t)\\) (7) \\(\\Delta(x_t / x_{t-1} -1)\\).FRED column gives mnemonics FRED followed short description. comparable series Global Insight given column GSI.","code":"\nd_stationary <- transform_fred(d, tcode = tcodes)\n#> Column 2, RPI. Transformation 5 (logDiff)\n#> Column 3, W875RX1. Transformation 5 (logDiff)\n#> Column 4, DPCERA3M086SBEA. Transformation 5 (logDiff)\n#> Column 5, CMRMTSPLx. Transformation 5 (logDiff)\n#> Column 6, RETAILx. Transformation 5 (logDiff)\n#> Column 7, INDPRO. Transformation 5 (logDiff)\n#> Column 8, IPFPNSS. Transformation 5 (logDiff)\n#> Column 9, IPFINAL. Transformation 5 (logDiff)\n#> Column 10, IPCONGD. Transformation 5 (logDiff)\n#> Column 11, IPDCONGD. Transformation 5 (logDiff)\n#> Column 12, IPNCONGD. Transformation 5 (logDiff)\n#> Column 13, IPBUSEQ. Transformation 5 (logDiff)\n#> Column 14, IPMAT. Transformation 5 (logDiff)\n#> Column 15, IPDMAT. Transformation 5 (logDiff)\n#> Column 16, IPNMAT. Transformation 5 (logDiff)\n#> Column 17, IPMANSICS. Transformation 5 (logDiff)\n#> Column 18, IPB51222S. Transformation 5 (logDiff)\n#> Column 19, IPFUELS. Transformation 5 (logDiff)\n#> Column 20, CUMFNS. Transformation 2 (Diff)\n#> Column 21, HWI. Transformation 2 (Diff)\n#> Column 22, HWIURATIO. Transformation 2 (Diff)\n#> Column 23, CLF16OV. Transformation 5 (logDiff)\n#> Column 24, CE16OV. Transformation 5 (logDiff)\n#> Column 25, UNRATE. Transformation 2 (Diff)\n#> Column 26, UEMPMEAN. Transformation 2 (Diff)\n#> Column 27, UEMPLT5. Transformation 5 (logDiff)\n#> Column 28, UEMP5TO14. Transformation 5 (logDiff)\n#> Column 29, UEMP15OV. Transformation 5 (logDiff)\n#> Column 30, UEMP15T26. Transformation 5 (logDiff)\n#> Column 31, UEMP27OV. Transformation 5 (logDiff)\n#> Column 32, CLAIMSx. Transformation 5 (logDiff)\n#> Column 33, PAYEMS. Transformation 5 (logDiff)\n#> Column 34, USGOOD. Transformation 5 (logDiff)\n#> Column 35, CES1021000001. Transformation 5 (logDiff)\n#> Column 36, USCONS. Transformation 5 (logDiff)\n#> Column 37, MANEMP. Transformation 5 (logDiff)\n#> Column 38, DMANEMP. Transformation 5 (logDiff)\n#> Column 39, NDMANEMP. Transformation 5 (logDiff)\n#> Column 40, SRVPRD. Transformation 5 (logDiff)\n#> Column 41, USTPU. Transformation 5 (logDiff)\n#> Column 42, USWTRADE. Transformation 5 (logDiff)\n#> Column 43, USTRADE. Transformation 5 (logDiff)\n#> Column 44, USFIRE. Transformation 5 (logDiff)\n#> Column 45, USGOVT. Transformation 5 (logDiff)\n#> Column 46, CES0600000007. Transformation 1 (Identity)\n#> Column 47, AWOTMAN. Transformation 2 (Diff)\n#> Column 48, AWHMAN. Transformation 1 (Identity)\n#> Column 49, HOUST. Transformation 4 (log)\n#> Column 50, HOUSTNE. Transformation 4 (log)\n#> Column 51, HOUSTMW. Transformation 4 (log)\n#> Column 52, HOUSTS. Transformation 4 (log)\n#> Column 53, HOUSTW. Transformation 4 (log)\n#> Column 54, PERMIT. Transformation 4 (log)\n#> Column 55, PERMITNE. Transformation 4 (log)\n#> Column 56, PERMITMW. Transformation 4 (log)\n#> Column 57, PERMITS. Transformation 4 (log)\n#> Column 58, PERMITW. Transformation 4 (log)\n#> Column 59, ACOGNO. Transformation 5 (logDiff)\n#> Column 60, AMDMNOx. Transformation 5 (logDiff)\n#> Column 61, ANDENOx. Transformation 5 (logDiff)\n#> Column 62, AMDMUOx. Transformation 5 (logDiff)\n#> Column 63, BUSINVx. Transformation 5 (logDiff)\n#> Column 64, ISRATIOx. Transformation 2 (Diff)\n#> Column 65, M1SL. Transformation 6 (logDiff2)\n#> Column 66, M2SL. Transformation 6 (logDiff2)\n#> Column 67, M2REAL. Transformation 5 (logDiff)\n#> Column 68, BOGMBASE. Transformation 6 (logDiff2)\n#> Column 69, TOTRESNS. Transformation 6 (logDiff2)\n#> Column 70, NONBORRES. Transformation 7 (diffp)\n#> Column 71, BUSLOANS. Transformation 6 (logDiff2)\n#> Column 72, REALLN. Transformation 6 (logDiff2)\n#> Column 73, NONREVSL. Transformation 6 (logDiff2)\n#> Column 74, CONSPI. Transformation 2 (Diff)\n#> Column 75, S.P.500. Transformation 5 (logDiff)\n#> Column 76, S.P..indust. Transformation 5 (logDiff)\n#> Column 77, S.P.div.yield. Transformation 2 (Diff)\n#> Column 78, S.P.PE.ratio. Transformation 5 (logDiff)\n#> Column 79, FEDFUNDS. Transformation 2 (Diff)\n#> Column 80, CP3Mx. Transformation 2 (Diff)\n#> Column 81, TB3MS. Transformation 2 (Diff)\n#> Column 82, TB6MS. Transformation 2 (Diff)\n#> Column 83, GS1. Transformation 2 (Diff)\n#> Column 84, GS5. Transformation 2 (Diff)\n#> Column 85, GS10. Transformation 2 (Diff)\n#> Column 86, AAA. Transformation 2 (Diff)\n#> Column 87, BAA. Transformation 2 (Diff)\n#> Column 88, COMPAPFFx. Transformation 1 (Identity)\n#> Column 89, TB3SMFFM. Transformation 1 (Identity)\n#> Column 90, TB6SMFFM. Transformation 1 (Identity)\n#> Column 91, T1YFFM. Transformation 1 (Identity)\n#> Column 92, T5YFFM. Transformation 1 (Identity)\n#> Column 93, T10YFFM. Transformation 1 (Identity)\n#> Column 94, AAAFFM. Transformation 1 (Identity)\n#> Column 95, BAAFFM. Transformation 1 (Identity)\n#> Column 96, TWEXAFEGSMTHx. Transformation 5 (logDiff)\n#> Column 97, EXSZUSx. Transformation 5 (logDiff)\n#> Column 98, EXJPUSx. Transformation 5 (logDiff)\n#> Column 99, EXUSUKx. Transformation 5 (logDiff)\n#> Column 100, EXCAUSx. Transformation 5 (logDiff)\n#> Column 101, WPSFD49207. Transformation 6 (logDiff2)\n#> Column 102, WPSFD49502. Transformation 6 (logDiff2)\n#> Column 103, WPSID61. Transformation 6 (logDiff2)\n#> Column 104, WPSID62. Transformation 6 (logDiff2)\n#> Column 105, OILPRICEx. Transformation 6 (logDiff2)\n#> Column 106, PPICMM. Transformation 6 (logDiff2)\n#> Column 107, CPIAUCSL. Transformation 6 (logDiff2)\n#> Column 108, CPIAPPSL. Transformation 6 (logDiff2)\n#> Column 109, CPITRNSL. Transformation 6 (logDiff2)\n#> Column 110, CPIMEDSL. Transformation 6 (logDiff2)\n#> Column 111, CUSR0000SAC. Transformation 6 (logDiff2)\n#> Column 112, CUSR0000SAD. Transformation 6 (logDiff2)\n#> Column 113, CUSR0000SAS. Transformation 6 (logDiff2)\n#> Column 114, CPIULFSL. Transformation 6 (logDiff2)\n#> Column 115, CUSR0000SA0L2. Transformation 6 (logDiff2)\n#> Column 116, CUSR0000SA0L5. Transformation 6 (logDiff2)\n#> Column 117, PCEPI. Transformation 6 (logDiff2)\n#> Column 118, DDURRG3M086SBEA. Transformation 6 (logDiff2)\n#> Column 119, DNDGRG3M086SBEA. Transformation 6 (logDiff2)\n#> Column 120, DSERRG3M086SBEA. Transformation 6 (logDiff2)\n#> Column 121, CES0600000008. Transformation 6 (logDiff2)\n#> Column 122, CES2000000008. Transformation 6 (logDiff2)\n#> Column 123, CES3000000008. Transformation 6 (logDiff2)\n#> Column 124, UMCSENTx. Transformation 2 (Diff)\n#> Column 125, DTCOLNVHFNM. Transformation 6 (logDiff2)\n#> Column 126, DTCTHFNM. Transformation 6 (logDiff2)\n#> Column 127, INVEST. Transformation 6 (logDiff2)\n#> Column 128, VIXCLSx. Transformation 1 (Identity)\nplot_ts(d_stationary[,target_variables], date = d_stationary[,1], n_row = 5)\n#> Warning: Removed 3 row(s) containing missing values\n#> (geom_path).\ncat(\"\\n\", sum(is.na(d_stationary)) - sum(is.na(d)), \"missing values have been introduced\")\n#> \n#>  215 missing values have been introduced\ncount_missing(d_stationary[-c(1, nrow(d_stationary)),])"},{"path":"data-preparation.html","id":"imputation","chapter":"1 Data preparation","heading":"1.3 Imputation","text":"","code":""},{"path":"data-preparation.html","id":"outliers-detection","chapter":"1 Data preparation","heading":"1.3.1 Outliers detection","text":"","code":"\ncount_outlier(d_stationary)\n## Outliers to NAs\nd_outlier <- outlier_to_missing(d_stationary)\ncat(\"\\n\", sum(is.na(d_outlier)) - sum(is.na(d_stationary)), \"missing values have been introduced\")\n#> \n#>  151 missing values have been introduced\ncompare_data(d_stationary, d_outlier, \n             variable_list = target_variables,\n             ribbon_labs = c(\"With outliers\", \"Without outliers\")\n             )"},{"path":"data-preparation.html","id":"imputation-of-the-missing-values","chapter":"1 Data preparation","heading":"1.3.2 Imputation of the missing values","text":"","code":"\nd_imputed <- em_impute(d_outlier, r = 8) \n#> Distance is: 1.6718 Distance is: 3.3624 Distance is: 0.0903\n#> Distance is: 0.0649 Distance is: 0.0523 Distance is: 3.1116\n#> Distance is: 0.0406 Distance is: 3.2676 Distance is: 0.0349\n#> Distance is: 0.0323 Distance is: 0.0298 Distance is: 0.0273\n#> Distance is: 0.0249 Distance is: 0.0227 Distance is: 1.0722\n#> Distance is: 0.019 Distance is: 0.0174 Distance is: 0.016\n#> Distance is: 0.0148 Distance is: 0.0137 Distance is: 0.0127\n#> Distance is: 0.0118 Distance is: 0.011 Distance is: 0.0103\n#> Distance is: 0.0096\n# d_imputed <- extract_and_fill(d_outlier, r = 8)$imputed ## Previous code, gives even more smoothed imputated values\ncompare_data(d_stationary, d_imputed, \n             variable_list = target_variables,\n             ribbon_labs = c(\"With missing\", \"Imputed\")\n             )"},{"path":"data-preparation.html","id":"pipeline-function","chapter":"1 Data preparation","heading":"1.4 Pipeline function","text":"following function wraps code used forecast evaluation.","code":"\npreprocess_fredmd <- function(fredmd, r = 8, thresh = 0.01, verbose = TRUE){\n  ## extract data and transformation codes\n  d <- as_tibble(fredmd[-1,])\n  tcodes <- unlist(fredmd[1,-1])\n  \n  ## execute the preprocessing pipeline\n  d_stationary <- transform_fred(d, tcode = tcodes)\n  d_outlier <- outlier_to_missing(d_stationary)\n  # d_imputed <- extract_and_fill(d_outlier, r = 8)$imputed\n  d_imputed <- em_impute(d_outlier, r, thresh, verbose)\n  \n  ## output\n  return(d_imputed)\n}\npreprocessed_data <- preprocess_fredmd(fredmd)\npreprocessed_data\n#> # A tibble: 770 x 128\n#>    sasdate         RPI   W875RX1 DPCERA3~1 CMRMTS~2  RETAILx\n#>    <chr>         <dbl>     <dbl>     <dbl>    <dbl>    <dbl>\n#>  1 1/1/1959   0.00191   0.00178    0.00408  5.17e-3  5.88e-3\n#>  2 2/1/1959   0.00393   0.00361    0.0104   7.36e-3  7.31e-3\n#>  3 3/1/1959   0.00643   0.00736    0.00941 -3.42e-3  8.32e-3\n#>  4 4/1/1959   0.00649   0.00705   -0.00364  1.99e-2  6.16e-4\n#>  5 5/1/1959   0.00576   0.00662    0.0120   6.80e-3  7.80e-3\n#>  6 6/1/1959   0.00310   0.00297    0.00371 -5.15e-5  9.06e-3\n#>  7 7/1/1959  -0.000589 -0.000764  -0.00343  1.21e-2 -3.30e-4\n#>  8 8/1/1959  -0.00564  -0.00575    0.00600 -5.24e-2  6.36e-3\n#>  9 9/1/1959   0.000721  0          0.0100   1.46e-2 -1.32e-2\n#> 10 10/1/1959  0.00128   0.00115   -0.00684  1.60e-3  7.29e-3\n#> # ... with 760 more rows, 122 more variables: INDPRO <dbl>,\n#> #   IPFPNSS <dbl>, IPFINAL <dbl>, IPCONGD <dbl>,\n#> #   IPDCONGD <dbl>, IPNCONGD <dbl>, IPBUSEQ <dbl>,\n#> #   IPMAT <dbl>, IPDMAT <dbl>, IPNMAT <dbl>,\n#> #   IPMANSICS <dbl>, IPB51222S <dbl>, IPFUELS <dbl>,\n#> #   CUMFNS <dbl>, HWI <dbl>, HWIURATIO <dbl>,\n#> #   CLF16OV <dbl>, CE16OV <dbl>, UNRATE <dbl>, ...\n# check that wrapper function gives the same result\nsum(preprocessed_data != d_imputed)\n#> [1] 0"},{"path":"forecast-evaluation.html","id":"forecast-evaluation","chapter":"2 Forecast evaluation","heading":"2 Forecast evaluation","text":"evaluate forecasting performances different models using rolling-window approach.results compared RMSFE benchmark AR(1) model.","code":"\n## Load code from script folders\npreprocessing_scripts_env <- new.env()    \nfile.sources = list.files(paste0(getwd(), \"/sourcecode/\",\n                                 c(\"forecast_algorithms\", \"forecast_evaluation\")\n                                 ), \n                          pattern=\".R$\", full.names=TRUE, \n                          ignore.case=TRUE)\nsapply(file.sources, source, preprocessing_scripts_env)\nattach(preprocessing_scripts_env, name=\"sourced_scripts\")\n## Load data\nfredmd <- read.csv(\"data/current.csv\")\ntarget_variables <- c(\"UNRATE\", \"W875RX1\", \"GS10\", \"CPIAUCSL\", \"WPSFD49207\", \"PAYEMS\", \"HOUST\", \"INDPRO\", \"M2SL\", \"S.P.500\")\n# fredmd$sasdate[c(1+1, 649, 650, 770)]\n# window_size = 648\nfredmd$sasdate[c(1+1, 673, 674, 770)]\n#> [1] \"1/1/1959\"  \"12/1/2014\" \"1/1/2015\"  \"1/1/2023\"\nwindow_size = 672\nar1_horizon1 <- forecast_evaluation_fredmd(forecaster = ar1_benchmark, \n                                           horizon = 1,\n                                           fredmd,\n                                           target = target_variables,\n                                           window_size = 672,\n                                           pseudo = TRUE,\n                                           num_cores = 7,\n                                           verbose = TRUE)"},{"path":"forecast-evaluation.html","id":"evaluation-of-the-models","chapter":"2 Forecast evaluation","heading":"2.1 Evaluation of the models","text":"consider following models: Principal Component Regression (PCR), … ADD MODELS","code":""},{"path":"forecast-evaluation.html","id":"principal-component-regression-pcr","chapter":"2 Forecast evaluation","heading":"2.1.1 Principal Component Regression (PCR)","text":"","code":"\npcr_horizon1 <- forecast_evaluation_fredmd(forecaster = pcr_reg, \n                                           horizon = 1,\n                                           fredmd,\n                                           target = target_variables,\n                                           window_size = 672,\n                                           pseudo = TRUE,\n                                           num_cores = 7,\n                                           verbose = TRUE)"},{"path":"forecast-evaluation.html","id":"diffusion-map","chapter":"2 Forecast evaluation","heading":"2.1.2 Diffusion map","text":"","code":"\ndiffusionmap_horizon1 <- forecast_evaluation_fredmd(forecaster = diffusion_map_reg, \n                                                    horizon = 1,\n                                                    fredmd,\n                                                    target = target_variables,\n                                                    window_size = 672,\n                                                    pseudo = TRUE,\n                                                    num_cores = 7,\n                                                    verbose = TRUE)"},{"path":"forecast-evaluation.html","id":"quadratic-pcr","chapter":"2 Forecast evaluation","heading":"2.1.3 Quadratic PCR","text":"","code":"\npcrquadratic_horizon1 <- forecast_evaluation_fredmd(forecaster = pcr_quadratic_reg, \n                                                    horizon = 1,\n                                                    fredmd,\n                                                    target = target_variables,\n                                                    window_size = 672,\n                                                    pseudo = TRUE,\n                                                    num_cores = 7,\n                                                    verbose = TRUE)"},{"path":"forecast-evaluation.html","id":"kernel-pcr---quadratic-kernel","chapter":"2 Forecast evaluation","heading":"2.1.4 Kernel PCR - Quadratic kernel","text":"","code":"\nkernelquadratic_horizon1 <- forecast_evaluation_fredmd(forecaster = kernel_poly_pcr_reg, \n                                                       horizon = 1,\n                                                       fredmd,\n                                                       target = target_variables,\n                                                       window_size = 672,\n                                                       pseudo = TRUE,\n                                                       num_cores = 7,\n                                                       verbose = TRUE)"},{"path":"forecast-evaluation.html","id":"kernel-pcr---gaussian-kernel","chapter":"2 Forecast evaluation","heading":"2.1.5 Kernel PCR - Gaussian kernel","text":"","code":"\nkernelgauss_horizon1 <- forecast_evaluation_fredmd(forecaster = kernel_gauss_pcr_reg, \n                                                    horizon = 1,\n                                                    fredmd,\n                                                    target = target_variables,\n                                                    window_size = 672,\n                                                    pseudo = TRUE,\n                                                    num_cores = 7,\n                                                    verbose = TRUE)"},{"path":"forecast-evaluation.html","id":"time-varying-pcr","chapter":"2 Forecast evaluation","heading":"2.1.6 Time-varying PCR","text":"50 components100 components150 components250 components","code":"\n## Define the forecaster functions for different number of principal components\nforecaster_tvpcr50  <- function(d, target, horizon = 1) { time_varying_pcr(d, target, horizon = 1, n_components = 50)  }\nforecaster_tvpcr100 <- function(d, target, horizon = 1) { time_varying_pcr(d, target, horizon = 1, n_components = 100) }\nforecaster_tvpcr150 <- function(d, target, horizon = 1) { time_varying_pcr(d, target, horizon = 1, n_components = 150) }\nforecaster_tvpcr250 <- function(d, target, horizon = 1) { time_varying_pcr(d, target, horizon = 1, n_components = 250) }\ntvpcr50_horizon1 <- forecast_evaluation_fredmd(forecaster = forecaster_tvpcr50, \n                                               horizon = 1,\n                                               fredmd,\n                                               target = target_variables,\n                                               window_size = 672,\n                                               pseudo = TRUE,\n                                               num_cores = 7,\n                                               verbose = TRUE)\ntvpcr100_horizon1 <- forecast_evaluation_fredmd(forecaster = forecaster_tvpcr100, \n                                               horizon = 1,\n                                               fredmd,\n                                               target = target_variables,\n                                               window_size = 672,\n                                               pseudo = TRUE,\n                                               num_cores = 7,\n                                               verbose = TRUE)\ntvpcr150_horizon1 <- forecast_evaluation_fredmd(forecaster = forecaster_tvpcr150, \n                                               horizon = 1,\n                                               fredmd,\n                                               target = target_variables,\n                                               window_size = 672,\n                                               pseudo = TRUE,\n                                               num_cores = 7,\n                                               verbose = TRUE)\ntvpcr250_horizon1 <- forecast_evaluation_fredmd(forecaster = forecaster_tvpcr250, \n                                               horizon = 1,\n                                               fredmd,\n                                               target = target_variables,\n                                               window_size = 672,\n                                               pseudo = TRUE,\n                                               num_cores = 7,\n                                               verbose = TRUE)"},{"path":"forecast-evaluation.html","id":"results","chapter":"2 Forecast evaluation","heading":"2.2 Results","text":"\nTable 2.1: Relative RMSE 1-step forecasts. Benchmark model: PCR.\nSize rolling window: 672. Pseudo real-time evaluation.\nSignificance levels Diebold-Mariano test:\n‘***’ p < 0.001,\n‘**’ p < 0.01,\n‘*’ p < 0.05,\n‘.’ p < 0.1\n","code":"\n## Benchmark results are automatically loaded if available for the correct \n## horizon/window size/pseudo type in the 'results' folder\nrmse_table <- get_rmse_table(ar1_horizon1, column_name = \"AR(1)\") |> \n  left_join(get_rmse_table(pcrquadratic_horizon1, column_name = \"PCR - Quadratic\")) |> \n  left_join(get_rmse_table(kernelquadratic_horizon1, column_name = \"Kernel PCA - quadratic\")) |> \n  left_join(get_rmse_table(kernelgauss_horizon1, column_name = \"Kernel PCA - Gaussian\")) |> \n  left_join(get_rmse_table(tvpcr50_horizon1, column_name = \"TV-PCR (50 components)\")) |> \n  left_join(get_rmse_table(tvpcr100_horizon1, column_name = \"TV-PCR (100 components)\")) |> \n  left_join(get_rmse_table(tvpcr150_horizon1, column_name = \"TV-PCR (150 components)\")) |> \n  left_join(get_rmse_table(tvpcr250_horizon1, column_name = \"TV-PCR (250 components)\")) |> \n  left_join(get_rmse_table(diffusionmap_horizon1, column_name = \"Diffusion Map\")) |> \n  left_join(get_rmse_table(rtsne_reg, column_name = \"RTSNE\")) |> \n  left_join(get_rmse_table(lle_reg, column_name = \"LLSE\")) |> \n  left_join(get_rmse_table(isomap, column_name = \"ISOMAP\"))\n#> Loading benchmark results from results/pcr_horizon1_windowsize672_pseudoTRUE\n#> Registered S3 method overwritten by 'quantmod':\n#>   method            from\n#>   as.zoo.data.frame zoo\n#> Loading benchmark results from results/pcr_horizon1_windowsize672_pseudoTRUE\n#> Joining, by = \"Variable\"\n#> Loading benchmark results from\n#> results/pcr_horizon1_windowsize672_pseudoTRUE\n#> Joining, by = \"Variable\"\n#> Loading benchmark results from\n#> results/pcr_horizon1_windowsize672_pseudoTRUE\n#> Joining, by = \"Variable\"\n#> Loading benchmark results from\n#> results/pcr_horizon1_windowsize672_pseudoTRUE\n#> Joining, by = \"Variable\"\n#> Loading benchmark results from\n#> results/pcr_horizon1_windowsize672_pseudoTRUE\n#> Joining, by = \"Variable\"\n#> Loading benchmark results from\n#> results/pcr_horizon1_windowsize672_pseudoTRUE\n#> Joining, by = \"Variable\"\n#> Loading benchmark results from\n#> results/pcr_horizon1_windowsize672_pseudoTRUE\n#> Joining, by = \"Variable\"\n#> Loading benchmark results from\n#> results/pcr_horizon1_windowsize672_pseudoTRUE\n#> Joining, by = \"Variable\"\n#> Loading benchmark results from\n#> results/pcr_horizon1_windowsize672_pseudoTRUE\n#> Joining, by = \"Variable\"\n#> Loading benchmark results from\n#> results/pcr_horizon1_windowsize672_pseudoTRUE\n#> Joining, by = \"Variable\"\n#> Loading benchmark results from\n#> results/pcr_horizon1_windowsize672_pseudoTRUE\n#> Joining, by = \"Variable\"\n## Print table\nrmse_table |> \n  mutate(across(-Variable, as.numeric)) |> \n  pivot_longer(-Variable, names_to= \"Forecaster\", values_to = \"RMSE\") |>\n  pivot_wider(names_from = \"Variable\", values_from = \"RMSE\") |> \n  mutate(across(-Forecaster, ~cell_spec(.x, bold = ifelse(.x==min(.x) & .x < 1, TRUE, FALSE)))) |>\n  kable(format = \"html\", \n        caption = paste0(\"Relative RMSE for \",\n                         pcr_horizon1$parameters$horizon, \n                         \"-step forecasts. Benchmark model: PCR. \n                         Size of the rolling window: \",\n                         pcr_horizon1$parameters$window_size, \". \",\n                         ifelse(pcr_horizon1$parameters$pseudo, \n                                \"Pseudo real-time evaluation.\",\n                                \"Real-time evaluation.\"),\n                         \"\\nSignificance levels of the Diebold-Mariano test: \n                         '\\\\*\\\\*\\\\*' p < 0.001, \n                         '\\\\*\\\\*' p < 0.01,\n                         '\\\\*' p < 0.05,\n                         '.' p < 0.1\"), \n        digits = 4,\n        escape = FALSE) |> \n  # kable(format = \"latex\", digits = 4)\n  kable_classic()\n#> Warning in mask$eval_all_mutate(quo): NA introdotti per\n#> coercizione\n\n#> Warning in mask$eval_all_mutate(quo): NA introdotti per\n#> coercizione"}]
